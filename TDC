#include <iostream>
#include <string>
#include <iomanip> // Biblioteca para manipular el formato de entrada/salida
using namespace std;

void Destino (string d [30][9], int x,int c [9]);
void ImprimirDestinos(string d[30][9], int x, int c[9], float b, float n);
void ID_Aviones(int a[9], int &b, int &c);
void Fly_Match(string d[30][9], int c, int a[9], int x, int h);
void PromedioViajes(string d[30][9], int x, int c[9]);
void Rentabilidad(string d[30][9], int x, int c[9], float b, float n);

int main(){
	bool salir = false;
	int no_valido = 0;
	int cant_av = 0;
	float Cuba = 0;
	float Nicaragua = 0;
	int aviones [9] = {0,0,0,0,0,0,0,0,0};
	int aux = 0;
	string destino[30][9];
	int Opcion = 0;
	int seguridad = 0;
	int coincidencia = 1;
	bool Opcion1_Cerrada = false;
	bool Opcion2_Cerrada = false;
	
	while (salir != true){
		cout << "===========================================" << endl;
		cout << "Sistema de Control de la Aerolinea CONVIASA" << endl;
		cout << "===========================================" << endl;
		cout << endl << "Seleccione una de las siguientes opciones:" << endl;
		cout << "1. Ingresar las ID de los aviones disponibles de la Aerolinea" << endl;
		cout << "2. Ingresar los destinos aviones disponibles en el mes" << endl;
		cout << "3. Ver la informacion individual de cada avion" << endl;
		cout << "4. Itinerarios de vuelos a Cuba por dia y porcentaje de vuelos a Nicaragua del dia siguiente" << endl;
		cout << "5. Promedio de Viajes de un Avion" << endl;
		cout << "6. Rentabilidad de los aviones en el mes" << endl;
		cout << "7. Salir" << endl;
		cin >> Opcion;
		
		switch(Opcion){
			case 1:
				if (Opcion1_Cerrada == true){
					cout << "ERROR: Las ID de los aviones ya han sido introducidas" << endl;
					break;
				}
				cout << endl;
				cout << "Opcion Seleccionada: " << Opcion << endl;
				cout << endl;
				ID_Aviones(aviones, no_valido, cant_av);
				/*for (int i = 0; i < 9; i++){
					cout << aviones[i] << " ";
				}*/
				Opcion1_Cerrada = true;
				cout << endl;
				break;
			case 2:
				if (Opcion2_Cerrada == true){
					cout << "ERROR: Los destinos de los aviones ya han sido introducidos" << endl;
					break;
				}
				cout << endl;
				cout << "Opcion Seleccionada: " << Opcion << endl;
				cout << endl;
				if (aviones[0] == 0){
					cout << "Debe ingresar las ID de los aviones disponibles antes de ingresar sus destinos" << endl;
					cout << endl;
					break;
				} else {
				Destino(destino, cant_av, aviones);
				/*for (int i = 0; i < 9; i++){
					cout << endl;
					for (int j = 0; j < 30; j++){				
						cout << destino[j][i] << " ";
					}
				}*/
				Opcion2_Cerrada = true;
				cout << endl;
				break;
				}
			case 3:
				cout << endl;
				cout << "Opcion Seleccionada: " << Opcion << endl;
				cout << endl;
				if (aviones[0] == 0){
					cout << "Debe ingresar las ID de los aviones disponibles antes de ingresar sus destinos" << endl;
					cout << endl;
					break;
				} else {
				ImprimirDestinos(destino, cant_av, aviones, Cuba, Nicaragua);
				cout << endl;
				break;
				}
			case 4:
				cout << endl;
				cout << "Opcion Seleccionada: " << Opcion << endl;
				if (destino[0][0] != "C" && destino[0][0] != "N" && destino[0][0] != "X"){
					cout << "Error: No hay destinos definidos para los aviones de la aerolinea" << endl;
					cout << endl;
					break;
				} else {
				Fly_Match(destino, coincidencia, aviones, cant_av, aux);
				cout << endl;
				break;
				}
			case 5:
				cout << endl;
				cout << "Opcion Seleccionada: " << Opcion << endl;
				if (destino[0][0] != "C" && destino[0][0] != "N" && destino[0][0] != "X"){
					cout << "Error: No hay destinos definidos para los aviones de la aerolinea" << endl;
					cout << endl;
					break;
				} else {
				PromedioViajes(destino, cant_av, aviones);
				cout << endl;
				break;
				}
			case 6:
				cout << endl;
				cout << "Opcion Seleccionada: " << Opcion << endl;
				if (destino[0][0] != "C" && destino[0][0] != "N" && destino[0][0] != "X"){
					cout << "Error: No hay destinos definidos para los aviones de la aerolinea" << endl;
					cout << endl;
					break;
				} else {
				Rentabilidad(destino, cant_av, aviones, Cuba, Nicaragua);
				cout << endl;
				break;
				}
			case 7:
				cout << endl;
				cout << "Usted ha salido del Sistema" << endl;
				salir = true;
				break;
			default:
				cout << "Error: La opcion ingresada no es valida" << endl;
				seguridad++;
				if(seguridad >= 3){
					cout << endl;
					cout << "Ha ingresado demasiados intentos no validos el programa se cerrara como medida de seguridad" << endl;
					salir = true;
				}
				break;	
		}
	}
	
	return 0;
}

void Destino(string d [30][9], int x, int c [9]){
	int p = 0;
	cout << "Ingrese el destino de vuelo para los aviones de la aerolinea" << endl;
    cout << "C --- Cuba" << endl << "N --- Nicaragua" << endl << "Digite (X) para terminar" << endl;
    
    for (int i = 0; i < x; i++) {
    	if (c[i] == 0){
			break;
		}
    	cout << "Destino del avion con el ID: " << c[i] << endl;
        for (int j = 0; j < 30; j++){ 
			cin >> d[j][i];
        	// Revisar reparacion y opcion "X" para cerrar el subprograma
			if(j == 13 || j == 27){
				d[j][i] = "R";
				cout << "El avion no puede volar al destino indicado debe pasar un proceso de reparacion" << endl;
				cout << "Por favor reprograme el vuelo" << endl;
				continue;
        	}
        	
        	while (d[j][i] != "C" && d[j][i] != "N" && d[j][i] != "X"){
            	cout<<"ERROR: Debe que introducir C para Cuba, N para Nicaragua y X para terminar" << endl;
            	cin >> d[j][i];
            	p++;
				if (p == 5){
					cout << "Ha ingresado demasiados intentos no validos el programa se cerrara como medida de seguridad" << endl;
					d[j][i] = "X";
					break;	
				}
			}
			
			if (d[j][i] == d[j-1][i] && d[j][i] == d[j-2][i]){
        		cout << "Error: El avion no puede realizar el vuelo a la ubicacion descrita, ingrese otra ubicacion o concluya" << endl;
        		d[j][i] = " ";
        		j--;
        		p++;
				if (p == 5){
					cout << "Ha ingresado demasiados intentos no validos el programa se cerrara como medida de seguridad" << endl;
					d[j][i] = "X";
					break;	
				}
			}
			
    		if (d[j][i] == "X"){
    		break;
			}
    	}
    	if (p == 5){
    		break;
    	}
	}
}

void ImprimirDestinos(string d[30][9], int x, int c[9], float b, float n){ 
	// En la Reiteracion de la opcion revisar los decimales
	cout << "Lista de destinos para cada avion:" << endl; 
	for (int i = 0; i < x; i++) {
		if (c[i] == 0){
			break;
		}
		cout << "============================================" << endl; 
		cout << "ID del avion: " << c[i] << endl; 
		cout << "Destinos: "; 
		for (int j = 0; j < 30; j++) { 
			if (d[j][i] == "X") { 
				break;
			}
			if (d[j][i] == "C"){
				b++;
			}
			if (d[j][i] == "N"){
				n++;
			}
			cout << d[j][i] << " "; 
		}
			cout << endl;
			cout << "El avion de ID " << c[i] << " tiene " << b << " vuelos a Cuba y " << n << " vuelos a Nicaragua" << endl;
			b = 0;
			n = 0;
	} 
}

void ID_Aviones(int a[9], int &b, int &c){
	cout<<"Digite las ID de los aviones disponibles de la aerolinea (Limite: 9)" << endl;
	cout<<"--- Recuerde que los ID deben ser exclusivamente de tres digitos" << endl;
	cout<<"--- Si la cantidad de aviones disponibles no logra alcanzar el limite, Digite 0 para concluir" << endl;
	cout << "--- Las ID que inician en 0 y 00 forman parte de la USA-ID-SYSTEM no estan disponibles en nuestro pais" << endl;
	
	for (int i = 0; i < 9; i ++){
		cin >> a[i];
		if (a[i] == 0){
			break;
		}
		if (a[i] > 999 || a[i] < 100){
			cout << "Ha ingresado una ID no valida, no se tendra en cuenta por favor ingrese nuevamente la ID" << endl;
			a[i] = 0;
			i--;
			b++;
		}
		if (b >= 9){
			cout <<"Ha ingresado demasiados intentos no validos el programa se cerrara como medida de seguridad" << endl;
			break;
		}
		// Colocar un bucle while para las ID iguales y nueva variable
		c++;
	}
}

void Fly_Match(string d[30][9], int c, int a[9], int x, int h){
	// Revisar
	int no_vuelosC = 0;
	float no_vuelosN = 0;
	while (c != 0){
	cout << "Por favor, indique el dia del mes del cual desea conocer la cantidad de aviones que viajaron a Cuba" << endl;
	cin >> h;
	no_vuelosC = 0;
	for(int i = 0; i < x; i++){
			if(d[h-1][i] == "C" /*&& a[i] != 0*/){
				cout << "El vuelo con ID: " << a[i] << " viajo a Cuba el dia: " << h << endl;
				no_vuelosC++;
			}
			if(d[h][i] == "N"){
				cout << no_vuelosN << endl;
				no_vuelosN++;
				cout << no_vuelosN << endl;
			}
		}
		if(no_vuelosN == 0){
			cout << "Ningun avion tiene programado vuelo con destino a Nicaragua para el dia " << h+1 << endl;
		}
		else{
			//Configurar la precision para mostrar hasta las centesimas
			cout << fixed << setprecision(2);
			cout << "El porcentaje de aviones con destino a Nicaragua para el dia " << h+1 << " es de: " << (no_vuelosN*100)/x << " porciento" << endl;
		}
		if (no_vuelosC == 0){
			cout << "No hubo vuelos a Cuba ese dia" << endl;
		}
		no_vuelosC = 0;
		no_vuelosN = 0;
		cout << "================================================================" << endl;
		cout << "Si desea conocer los vuelos de algun otro dia por favor digite 1" << endl;
		cout << "En caso contrario por favor digite 0" << endl;
		cin >> c;
		while (c != 0 && c !=  1){
			cout << "Error: La opcion ingresada no es valida" << endl;
			cout << "Ingrese:" << endl << "0-----Salir" << endl << "1-----Continuar" << endl;
			cin >> c;
			no_vuelosC++;
			if (no_vuelosC == 3){
				cout << "Error: Ha ingresado demasiados intentos no validos el programa se cerrara como medida de seguridad" << endl;
				c = 0;
			}
		}
	}
}

void PromedioViajes(string d[30][9], int x, int c[9]){
	float Cuba = 0;
	float Nicaragua = 0;
	int ID = 0;
	/* Crea un for para que el ususario pueda seguir consultando las ID de los aviones hasta que digite un valor centinela, es decir,
	 le pones un cout que diga digite 0 para salir al menu principal del sistema e implementalo con un "if" para que se cumpla */
	cout << "Digte la ID del avion del cual desea conocer el promedio de de viajes: " << endl;
	cin >> ID;
	for (int i = 0; i < x; i++){
		if (c[i] == ID){
			x = i;
		}
	}
	for(int j = 0; j < 30; j++){
	    if (d[j][x] == "C"){
			Cuba++;	
		} else if (d[j][x] == "N"){
			Nicaragua++; 
		}
	}
	
	// Configurar la precision para mostrar hasta las centesimas 
	cout << fixed << setprecision(2); 
	   
	float promedioCuba = (Cuba / 28) * 100;
	float promedioNicaragua = (Nicaragua / 28) * 100;
	// Aumento la cantidad de aviones y el codigo quebro (Revisar)
	cout << "===================================" << endl;
	cout << "Avion ID: " << ID << endl;
	cout << "Promedio de viajes a Cuba: " << promedioCuba << "%" << endl;
	cout << "Promedio de viajes a Nicaragua: " << promedioNicaragua << "%" << endl;			        	
}		

void Rentabilidad(string d[30][9], int x, int c[9], float b, float n) {
	double ingresosTotales[4][9];
	double rentabilidad [2] = {0, 0}; 
		
	for (int j = 0; j < x; j++){
		ingresosTotales[0][j] = c[j];
	}
	
	for (int i = 0; i < x; i++){	
		for (int j = 0; j < 30; j++){
			if (d[j][i] == "C"){
				b++;
			}
			if (d[j][i] == "N"){
				n++;
			}
		}
		b*= 611.03;
		n *= 638.28;
		ingresosTotales[1][i] = b;
		ingresosTotales[2][i] = n;
		ingresosTotales[3][i] = n + b;
		b = 0;
		n = 0;
	}
	
	 
	
	cout << "========================================================" << endl;
	cout << "Relaion de ganancias por ventas de pasajes de cada avion" << endl;
	for (int i = 0; i < x; i++){
			if (ingresosTotales[0][i] == 0){
				break;
			}
			// Configurar la precision para mostrar los ID como enteros
			cout << "Avion con ID: " << fixed << setprecision(0) << ingresosTotales[0][i] << endl;;
			// Configurar la precision para mostrar hasta las centesimas 
			cout << fixed << setprecision(2);   
			cout << "Ingresos por viajes a Cuba: " << ingresosTotales[1][i] << " USD" << endl;
			cout << "Ingresos por viajes a Nicaragua: " << ingresosTotales[2][i] << " USD" << endl;
			cout << "Ingresos totales en el mes: " << ingresosTotales[3][i] << " USD" << endl;
			cout << "=================================================" << endl;
			
			if (ingresosTotales[3][i] > rentabilidad[0]){
				rentabilidad[0] = ingresosTotales[3][i];
				rentabilidad[1] = ingresosTotales[0][i];
			}
	}
	// Configurar la precision para mostrar hasta las centesimas 
	cout << "El avion mas rentable en el mes fue el " << fixed << setprecision(0) << rentabilidad[1] << " con un Ingreso Total de: " << fixed << setprecision(2) << rentabilidad[0] << " USD" << endl;	
}
